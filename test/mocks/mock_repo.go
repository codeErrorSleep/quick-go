// Code generated by MockGen. DO NOT EDIT.
// Source: repo.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	models "quick-go/app/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockISpuRepo is a mock of ISpuRepo interface.
type MockISpuRepo struct {
	ctrl     *gomock.Controller
	recorder *MockISpuRepoMockRecorder
}

// MockISpuRepoMockRecorder is the mock recorder for MockISpuRepo.
type MockISpuRepoMockRecorder struct {
	mock *MockISpuRepo
}

// NewMockISpuRepo creates a new mock instance.
func NewMockISpuRepo(ctrl *gomock.Controller) *MockISpuRepo {
	mock := &MockISpuRepo{ctrl: ctrl}
	mock.recorder = &MockISpuRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockISpuRepo) EXPECT() *MockISpuRepoMockRecorder {
	return m.recorder
}

// GetSpuDetail mocks base method.
func (m *MockISpuRepo) GetSpuDetail(ctx context.Context, appID, spuID string) (models.Spu, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSpuDetail", ctx, appID, spuID)
	ret0, _ := ret[0].(models.Spu)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSpuDetail indicates an expected call of GetSpuDetail.
func (mr *MockISpuRepoMockRecorder) GetSpuDetail(ctx, appID, spuID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSpuDetail", reflect.TypeOf((*MockISpuRepo)(nil).GetSpuDetail), ctx, appID, spuID)
}

// MockIStockRepo is a mock of IStockRepo interface.
type MockIStockRepo struct {
	ctrl     *gomock.Controller
	recorder *MockIStockRepoMockRecorder
}

// MockIStockRepoMockRecorder is the mock recorder for MockIStockRepo.
type MockIStockRepoMockRecorder struct {
	mock *MockIStockRepo
}

// NewMockIStockRepo creates a new mock instance.
func NewMockIStockRepo(ctrl *gomock.Controller) *MockIStockRepo {
	mock := &MockIStockRepo{ctrl: ctrl}
	mock.recorder = &MockIStockRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIStockRepo) EXPECT() *MockIStockRepoMockRecorder {
	return m.recorder
}

// GetStockDetail mocks base method.
func (m *MockIStockRepo) GetStockDetail(ctx context.Context, appID, spuID string) ([]models.Stock, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStockDetail", ctx, appID, spuID)
	ret0, _ := ret[0].([]models.Stock)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStockDetail indicates an expected call of GetStockDetail.
func (mr *MockIStockRepoMockRecorder) GetStockDetail(ctx, appID, spuID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStockDetail", reflect.TypeOf((*MockIStockRepo)(nil).GetStockDetail), ctx, appID, spuID)
}
